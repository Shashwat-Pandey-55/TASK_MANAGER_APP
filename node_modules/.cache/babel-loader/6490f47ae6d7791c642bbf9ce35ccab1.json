{"ast":null,"code":"// import React, { useContext, useEffect, useRef, useState } from 'react'; \n// import Taskitem from './Taskitem';\n// import AddTask from './AddTask';\n// import taskContext from '../context/tasks/taskContext';\n// import { useNavigate } from 'react-router-dom';\n\n//  const Tasks = (props) => {\n//     const context = useContext(taskContext);\n//     const navigate = useNavigate();\n//     const {tasks, getTasks, editTask } = context;\n//     useEffect(()=> {\n//        if (localStorage.getItem('token')){\n//         getTasks()\n//        }\n//        else{\n//         navigate(\"/login\")\n//        }\n//         // eslint-disable-next-line\n//     },[])\n//     const ref = useRef(null);\n//     const refClose = useRef(null);\n//     const [task,setTask] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\", eduedate: \"\"})\n\n//     const updateTask = (currentTask) => {\n//         ref.current.click(); \n//         setTask({id: currentTask._id, etitle : currentTask.title, edescription: currentTask.description, etag:currentTask.tag, eduedate: currentTask.duedate})\n\n//     } \n\n//     const handleClick = (e) => {\n//         console.log(\"Updating the task...\", task);\n//         editTask(task.id, task.etitle, task.edescription, task.etag, task.eduedate);\n//         refClose.current.click();\n//         props.showAlert(\"Updated Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     console.log(tasks);\n//     return (\n//         <>\n//          <AddTask showAlert={props.showAlert} />\n\n//          <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//         Launch demo modal\n//         </button>\n\n// <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//   <div className=\"modal-dialog\">\n//     <div className=\"modal-content\">\n//       <div className=\"modal-header\">\n//         <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n//         <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//       </div>\n//       <div className=\"modal-body\">\n\n//       <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={task.etitle} onChange={onChange} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={task.edescription} onChange={onChange} minLength={5} required />\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={task.etag} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"eduedate\" name=\"eduedate\" value={task.eduedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n// </form>\n\n//       </div>\n//       <div className=\"modal-footer\">\n//         <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//         <button disabled={task.etitle.length<5 || task.edescription.length<5} onClick={handleClick}  type=\"button\" className=\"btn btn-primary\">Update Task</button>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//         <div className=\"row my-3\">\n//         <h2>Your Tasks</h2>\n//         <div className=\"container mx-2\">\n//         {tasks.length === 0 && 'No Tasks to Display'}\n//         </div>\n//         {tasks.map((task)=>{\n//         return <Taskitem key={task._id} updateTask={updateTask}  showAlert={props.showAlert}/>\n//         })}\n//         </div> \n//         </>\n//     )\n// }\n\n// export default Tasks;\n\n// import React, { useContext, useEffect, useRef, useState } from 'react'; \n// import Taskitem from './Taskitem';\n// import AddTask from './AddTask';\n// import taskContext from '../context/tasks/taskContext';\n// import { useNavigate } from 'react-router-dom';\n\n//  const Tasks = (props) => {\n//     const context = useContext(taskContext);\n//     const navigate = useNavigate();\n//     const {tasks, getTasks, editTask } = context;\n//     useEffect(()=> {\n//        if (localStorage.getItem('token')){\n//         getTasks()\n//        }\n//        else{\n//         navigate(\"/login\")\n//        }\n//         // eslint-disable-next-line\n//     },[])\n//     const ref = useRef(null);\n//     const refClose = useRef(null);\n//     const [task,setTask] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\", eduedate: \"\"})\n\n//     const updateTask = (currentTask) => {\n//         ref.current.click(); \n//         setTask({id: currentTask._id, etitle : currentTask.title, edescription: currentTask.description, etag:currentTask.tag, eduedate: currentTask.eduedate})\n\n//     } \n\n//     const handleClick = (e) => {\n//         console.log(\"Updating the task...\", task);\n//         editTask(task.id, task.etitle, task.edescription, task.etag, task.eduedate);\n//         refClose.current.click();\n//         props.showAlert(\"Updated Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     return (\n//         <>\n//          <AddTask showAlert={props.showAlert} />\n\n//          <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//         Launch demo modal\n//         </button>\n\n// <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//   <div className=\"modal-dialog\">\n//     <div className=\"modal-content\">\n//       <div className=\"modal-header\">\n//         <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n//         <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//       </div>\n//       <div className=\"modal-body\">\n\n//       <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={task.etitle} onChange={onChange} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={task.edescription} onChange={onChange} minLength={5} required />\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={task.etag} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"eduedate\" name=\"eduedate\" value={task.eduedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n// </form>\n\n//       </div>\n//       <div className=\"modal-footer\">\n//         <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//         <button disabled={task.etitle.length<5 || task.edescription.length<5} onClick={handleClick}  type=\"button\" className=\"btn btn-primary\">Update Task</button>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//         <div className=\"row my-3\">\n//         <h2>Your Tasks</h2>\n//         <div className=\"container mx-2\">\n//         {tasks.length === 0 && 'No Tasks to Display'}\n//         </div>\n//         {tasks.map((task)=>{\n//         return <Taskitem key={task._id} updateTask={updateTask} showAlert={props.showAlert} task={task}/>\n//         })}\n//         </div> \n//         </>\n//     )\n// }\n\n// export default Tasks;","map":{"version":3,"names":[],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/components/Tasks.js"],"sourcesContent":["// import React, { useContext, useEffect, useRef, useState } from 'react'; \n// import Taskitem from './Taskitem';\n// import AddTask from './AddTask';\n// import taskContext from '../context/tasks/taskContext';\n// import { useNavigate } from 'react-router-dom';\n\n\n//  const Tasks = (props) => {\n//     const context = useContext(taskContext);\n//     const navigate = useNavigate();\n//     const {tasks, getTasks, editTask } = context;\n//     useEffect(()=> {\n//        if (localStorage.getItem('token')){\n//         getTasks()\n//        }\n//        else{\n//         navigate(\"/login\")\n//        }\n//         // eslint-disable-next-line\n//     },[])\n//     const ref = useRef(null);\n//     const refClose = useRef(null);\n//     const [task,setTask] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\", eduedate: \"\"})\n\n\n//     const updateTask = (currentTask) => {\n//         ref.current.click(); \n//         setTask({id: currentTask._id, etitle : currentTask.title, edescription: currentTask.description, etag:currentTask.tag, eduedate: currentTask.duedate})\n    \n//     } \n\n//     const handleClick = (e) => {\n//         console.log(\"Updating the task...\", task);\n//         editTask(task.id, task.etitle, task.edescription, task.etag, task.eduedate);\n//         refClose.current.click();\n//         props.showAlert(\"Updated Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     console.log(tasks);\n//     return (\n//         <>\n//          <AddTask showAlert={props.showAlert} />\n\n//          <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//         Launch demo modal\n//         </button>\n\n\n// <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//   <div className=\"modal-dialog\">\n//     <div className=\"modal-content\">\n//       <div className=\"modal-header\">\n//         <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n//         <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//       </div>\n//       <div className=\"modal-body\">\n\n//       <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={task.etitle} onChange={onChange} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={task.edescription} onChange={onChange} minLength={5} required />\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={task.etag} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"eduedate\" name=\"eduedate\" value={task.eduedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n\n// </form>\n\n//       </div>\n//       <div className=\"modal-footer\">\n//         <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//         <button disabled={task.etitle.length<5 || task.edescription.length<5} onClick={handleClick}  type=\"button\" className=\"btn btn-primary\">Update Task</button>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//         <div className=\"row my-3\">\n//         <h2>Your Tasks</h2>\n//         <div className=\"container mx-2\">\n//         {tasks.length === 0 && 'No Tasks to Display'}\n//         </div>\n//         {tasks.map((task)=>{\n//         return <Taskitem key={task._id} updateTask={updateTask}  showAlert={props.showAlert}/>\n//         })}\n//         </div> \n//         </>\n//     )\n// }\n\n// export default Tasks;\n\n\n\n// import React, { useContext, useEffect, useRef, useState } from 'react'; \n// import Taskitem from './Taskitem';\n// import AddTask from './AddTask';\n// import taskContext from '../context/tasks/taskContext';\n// import { useNavigate } from 'react-router-dom';\n\n\n//  const Tasks = (props) => {\n//     const context = useContext(taskContext);\n//     const navigate = useNavigate();\n//     const {tasks, getTasks, editTask } = context;\n//     useEffect(()=> {\n//        if (localStorage.getItem('token')){\n//         getTasks()\n//        }\n//        else{\n//         navigate(\"/login\")\n//        }\n//         // eslint-disable-next-line\n//     },[])\n//     const ref = useRef(null);\n//     const refClose = useRef(null);\n//     const [task,setTask] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\", eduedate: \"\"})\n\n\n//     const updateTask = (currentTask) => {\n//         ref.current.click(); \n//         setTask({id: currentTask._id, etitle : currentTask.title, edescription: currentTask.description, etag:currentTask.tag, eduedate: currentTask.eduedate})\n    \n//     } \n\n//     const handleClick = (e) => {\n//         console.log(\"Updating the task...\", task);\n//         editTask(task.id, task.etitle, task.edescription, task.etag, task.eduedate);\n//         refClose.current.click();\n//         props.showAlert(\"Updated Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     return (\n//         <>\n//          <AddTask showAlert={props.showAlert} />\n\n//          <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//         Launch demo modal\n//         </button>\n\n\n// <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//   <div className=\"modal-dialog\">\n//     <div className=\"modal-content\">\n//       <div className=\"modal-header\">\n//         <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n//         <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//       </div>\n//       <div className=\"modal-body\">\n\n//       <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={task.etitle} onChange={onChange} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={task.edescription} onChange={onChange} minLength={5} required />\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={task.etag} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"eduedate\" name=\"eduedate\" value={task.eduedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n\n// </form>\n\n//       </div>\n//       <div className=\"modal-footer\">\n//         <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//         <button disabled={task.etitle.length<5 || task.edescription.length<5} onClick={handleClick}  type=\"button\" className=\"btn btn-primary\">Update Task</button>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//         <div className=\"row my-3\">\n//         <h2>Your Tasks</h2>\n//         <div className=\"container mx-2\">\n//         {tasks.length === 0 && 'No Tasks to Display'}\n//         </div>\n//         {tasks.map((task)=>{\n//         return <Taskitem key={task._id} updateTask={updateTask} showAlert={props.showAlert} task={task}/>\n//         })}\n//         </div> \n//         </>\n//     )\n// }\n\n// export default Tasks;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}