{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const usersInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n  const [users, setUsers] = useState(usersInitial);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n  // Add a Task\n  const addTask = async (title, description, tag, duedate, users) => {\n    //TODO : API call\n    //API call\n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate,\n        users\n      })\n    });\n    const task = await response.json();\n    setTasks(tasks.concat(task));\n  };\n\n  // Delete a Task\n  const deleteTask = async id => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate,\n        status\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask,\n      editTask,\n      getTasks\n    },\n    children: [props.children, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskState, \"u2/BAYMjwGKVNLTHGnk7Mm3BYRo=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","usersInitial","tasks","setTasks","users","setUsers","selectedUsers","setSelectedUsers","getTasks","response","fetch","method","headers","localStorage","getItem","json","addTask","title","description","tag","duedate","body","JSON","stringify","task","concat","deleteTask","id","console","log","newTasks","filter","_id","editTask","status","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\n\nconst TaskState = (props) => {\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const usersInitial = [];\n\n  const [tasks, setTasks] = useState(tasksInitial);\n  const [users, setUsers] = useState(usersInitial);\n  const [selectedUsers, setSelectedUsers] = useState([])\n\n\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n\n\n\n\n  // Add a Task\n  const addTask = async (title, description, tag, duedate, users) => {\n    //TODO : API call\n    //API call\n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag, duedate, users}),\n    });\n\n    const task = await response.json();\n    setTasks(tasks.concat(task));\n  };\n\n\n\n\n\n  // Delete a Task\n  const deleteTask = async (id) => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter((task) => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n\n\n\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag, duedate, status}),\n    });\n\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break; \n      }\n    }\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{ tasks, addTask, deleteTask, editTask, getTasks}}\n    >\n      {props.children};\n    </TaskContext.Provider>\n  );\n};\n\nexport default TaskState;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}