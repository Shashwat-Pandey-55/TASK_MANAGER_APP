{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n      }\n    });\n  };\n\n  // Add a Task\n  const addTask = async (title, description, tag, duedate) => {\n    //TODO : API call\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate\n      })\n    });\n    console.log(\"Adding a new task\");\n    const task = {\n      \"_id\": \"64a82f46ff1742308b341412a\",\n      \"user\": \"64a7f1d89088853bce980fef\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"duedate\": duedate,\n      \"__v\": 0\n    };\n    setTasks(tasks.concat(task));\n  };\n\n  // Delete a Task\n  const deleteTask = id => {\n    //TODO : API call\n    console.log(\"Deleting the task with id\" + id);\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate\n      })\n    });\n    const json = response.json();\n\n    // Logic to edit in client\n    for (let index = 0; index < tasks.length; index++) {\n      const element = tasks[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        element.duedate = duedate;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask,\n      editTask\n    },\n    children: [props.children, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskState, \"UhKdAoJZyQh7T+OrXFy8BVoRYQA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","tasks","setTasks","getTasks","response","fetch","method","headers","addTask","title","description","tag","duedate","body","JSON","stringify","console","log","task","concat","deleteTask","id","newTasks","filter","_id","editTask","json","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\n\nconst TaskState = (props) => {\n    const host = \"http://localhost:5500\";\n    const tasksInitial = []\n    \n    const [tasks, setTasks]  = useState(tasksInitial)\n\n // GET all Tasks\n const getTasks = async () => {\n      //API call\n      const response = await fetch (`${host}/api/tasks/fetchalltasks`, {\n        method : 'GET',\n        headers : {\n            'Content-Type' : 'application/json',\n            \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n        },\n\n    });\n\n  \n}\n\n\n\n\n    // Add a Task\n    const addTask = async (title, description,tag, duedate) => {\n        //TODO : API call\n          //API call\n          const response = await fetch (`${host}/api/tasks/fetchalltasks`, {\n            method : 'POST',\n            headers : {\n                'Content-Type' : 'application/json',\n                \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n            },\n            body: JSON.stringify({ title, description, tag, duedate})\n        });\n\n        console.log(\"Adding a new task\");\n        const task = {\n            \"_id\": \"64a82f46ff1742308b341412a\",\n            \"user\":\"64a7f1d89088853bce980fef\",\n            \"title\": title,\n            \"description\": description,\n            \"tag\": tag,\n            \"duedate\": duedate,      \n            \"__v\": 0\n          }; \n        setTasks(tasks.concat(task));\n    }\n\n    // Delete a Task\n    const deleteTask = (id) => {\n        //TODO : API call\n        console.log(\"Deleting the task with id\" + id)\n        const newTasks = tasks.filter((task)=>{return task._id!==id})\n        setTasks(newTasks);\n    }\n\n    // Edit a Task\n    const editTask = async (id, title, description, tag, duedate) => {\n        //API call\n        const response = await fetch (`${host}/api/tasks/updatetask/${id}`, {\n            method : 'POST',\n            headers : {\n                'Content-Type' : 'application/json',\n                \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhODNhYzE3NzIzZTM4NGM4MjA1NTIzIn0sImlhdCI6MTY4ODc0NjcyMX0.qKKmVUBvSj7iQ_HwuFNdA2YpLBAFEHG0RLVxp-X0Wtk\"\n            },\n            body: JSON.stringify({title, description, tag, duedate})\n        });\n\n        const json =   response.json();\n\n        // Logic to edit in client\n        for (let index = 0; index < tasks.length; index++) {\n            const element = tasks[index];\n            if (element._id === id)\n            {\n                element.title = title;\n                element.description = description;\n                element.tag = tag;\n                element.duedate = duedate;\n            }\n        }\n    }\n\n    return (\n        <TaskContext.Provider value = {{tasks, addTask, deleteTask, editTask}}>\n            {props.children};\n        </TaskContext.Provider>\n    )\n}\n\nexport default TaskState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}