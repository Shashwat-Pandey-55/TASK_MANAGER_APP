{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/components/AddTask.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState  } from 'react'; \n// import taskContext from '../context/tasks/taskContext';\n\n// export const AddTask = (props) => {\n\n//     const context = useContext(taskContext);\n//     const {addTask} = context;\n\n//     const [task,setTask] = useState({title:\"\",description:\"\",tag:\"\",duedate:\"\"})\n\n//     const handleClick = (e) => {\n//         e.preventDefault();\n//         const duedate = new Date(task.duedate); // Replace with your date value\n//         const formattedDuedate = duedate.toISOString(); // Format date as ISO 8601 string\n\n//         addTask(task.title, task.description, task.tag, formattedDuedate );\n//         setTask({title:\"\",description:\"\",tag:\"\",duedate:\"\"})\n//         props.showAlert(\"Added Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     return (\n//         <div className=\"container my-3\">\n//         <h2>Add a Task</h2>\n//         <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={onChange} value={task.title} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"description\" name=\"description\" value={task.description} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"tag\" name=\"tag\" onChange={onChange} value={task.tag} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"duedate\" name=\"duedate\" value={task.duedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n// <button disabled={task.title.length<5 || task.description.length<5} type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>Add Task</button>\n// </form>\n// </div>\n//     )\n// }\n\n// export default AddTask;\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport taskContext from '../context/tasks/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = props => {\n  _s();\n  const context = useContext(taskContext);\n  const {\n    addTask\n  } = context;\n  const [task, setTask] = useState({\n    title: '',\n    description: '',\n    tag: '',\n    duedate: '',\n    users: []\n  });\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const response = await fetch('your_api_endpoint'); // Replace with your actual API endpoint\n        const data = await response.json();\n        setMembers(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const handleClick = e => {\n    e.preventDefault();\n    const duedate = new Date(task.duedate);\n    const formattedDuedate = duedate.toISOString();\n    addTask(task.title, task.description, task.tag, formattedDuedate, task.users);\n    setTask({\n      title: '',\n      description: '',\n      tag: '',\n      duedate: '',\n      users: []\n    });\n    props.showAlert('Added Successfully', 'success');\n  };\n  const handleUserSelection = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    setTask({\n      ...task,\n      users: selectedOptions\n    });\n  };\n  const onChange = e => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"users\",\n          className: \"form-label\",\n          children: \"Assign Task To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          id: \"users\",\n          name: \"users\",\n          value: task.users,\n          onChange: handleUserSelection,\n          multiple: true,\n          children: members.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: member.id,\n            children: member.name\n          }, member.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTask, \"DHmn2eLyfqK4UfcVuL6tmPzNUjM=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useContext","useEffect","useState","taskContext","jsxDEV","_jsxDEV","AddTask","props","_s","context","addTask","task","setTask","title","description","tag","duedate","users","members","setMembers","fetchMembers","response","fetch","data","json","error","console","handleClick","e","preventDefault","Date","formattedDuedate","toISOString","showAlert","handleUserSelection","selectedOptions","Array","from","target","option","value","onChange","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","multiple","map","member","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/components/AddTask.js"],"sourcesContent":["// import React, { useContext, useState  } from 'react'; \n// import taskContext from '../context/tasks/taskContext';\n\n\n// export const AddTask = (props) => {\n\n//     const context = useContext(taskContext);\n//     const {addTask} = context;\n\n//     const [task,setTask] = useState({title:\"\",description:\"\",tag:\"\",duedate:\"\"})\n\n//     const handleClick = (e) => {\n//         e.preventDefault();\n//         const duedate = new Date(task.duedate); // Replace with your date value\n//         const formattedDuedate = duedate.toISOString(); // Format date as ISO 8601 string\n    \n//         addTask(task.title, task.description, task.tag, formattedDuedate );\n//         setTask({title:\"\",description:\"\",tag:\"\",duedate:\"\"})\n//         props.showAlert(\"Added Successfully\",\"success\");\n//     }\n\n//     const onChange = (e) => {\n//             setTask({...task,[e.target.name]:e.target.value})\n//     }\n\n//     return (\n//         <div className=\"container my-3\">\n//         <h2>Add a Task</h2>\n//         <form className=\"my-3\">\n// <div className=\"mb-3\">\n// <label htmlFor=\"title\" className=\"form-label\">Title</label>\n// <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={onChange} value={task.title} minLength={5} required/>\n\n// </div>\n\n// <div className=\"mb-3\">\n// <label htmlFor=\"description\" className=\"form-label\">Description</label>\n// <input type=\"text\" className=\"form-control\" id=\"description\" name=\"description\" value={task.description} onChange={onChange} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n// <input type=\"text\" className=\"form-control\" id=\"tag\" name=\"tag\" onChange={onChange} value={task.tag} minLength={5} required/>\n// </div>\n// <div className=\"mb-3\">\n// <label htmlFor=\"duedate\" className=\"form-label\">Due Date</label>\n// <input type=\"text\" className=\"form-control\" id=\"duedate\" name=\"duedate\" value={task.duedate} onChange={onChange} minLength={5} required/>\n// </div>\n\n\n// <button disabled={task.title.length<5 || task.description.length<5} type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>Add Task</button>\n// </form>\n// </div>\n//     )\n// }\n\n// export default AddTask;\n\n\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport taskContext from '../context/tasks/taskContext';\n\nconst AddTask = (props) => {\n  const context = useContext(taskContext);\n  const { addTask } = context;\n\n  const [task, setTask] = useState({\n    title: '',\n    description: '',\n    tag: '',\n    duedate: '',\n    users: [],\n  });\n  const [members, setMembers] = useState([]);\n\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const response = await fetch('your_api_endpoint'); // Replace with your actual API endpoint\n        const data = await response.json();\n        setMembers(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMembers();\n  }, []);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const duedate = new Date(task.duedate);\n    const formattedDuedate = duedate.toISOString();\n\n    addTask(task.title, task.description, task.tag, formattedDuedate, task.users);\n    setTask({\n      title: '',\n      description: '',\n      tag: '',\n      duedate: '',\n      users: [],\n    });\n    props.showAlert('Added Successfully', 'success');\n  };\n\n  const handleUserSelection = (e) => {\n    const selectedOptions = Array.from(e.target.selectedOptions, (option) => option.value);\n    setTask({ ...task, users: selectedOptions });\n  };\n\n  const onChange = (e) => {\n    setTask({ ...task, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"container my-3\">\n      <h2>Add a Task</h2>\n      <form className=\"my-3\">\n        {/* Form fields */}\n        {/* ... */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"users\" className=\"form-label\">\n            Assign Task To\n          </label>\n          <select\n            className=\"form-select\"\n            id=\"users\"\n            name=\"users\"\n            value={task.users}\n            onChange={handleUserSelection}\n            multiple\n          >\n            {members.map((member) => (\n              <option key={member.id} value={member.id}>\n                {member.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        {/* Submit button */}\n        {/* ... */}\n      </form>\n    </div>\n  );\n};\n\nexport default AddTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}