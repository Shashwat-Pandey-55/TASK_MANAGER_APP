{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n  // // Add a Task\n  // const addTask = async (title, description, tag, duedate) => {\n  //   //TODO : API call\n  //   //API call\n  //   const response = await fetch(`${host}/api/tasks/addtask`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"auth-token\": localStorage.getItem(\"token\"),\n  //     },\n  //     body: JSON.stringify({ title, description, tag, duedate}),\n  //   });\n\n  //   const task = await response.json();\n  //   setTasks(tasks.concat(task));\n  // };\n\n  // Delete a Task\n  const deleteTask = async id => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate,\n        status\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask,\n      editTask,\n      getTasks\n    },\n    children: [props.children, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskState, \"UhKdAoJZyQh7T+OrXFy8BVoRYQA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","tasks","setTasks","getTasks","response","fetch","method","headers","localStorage","getItem","json","deleteTask","id","console","log","newTasks","filter","task","_id","editTask","title","description","tag","duedate","status","body","JSON","stringify","parse","index","length","element","Provider","value","addTask","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\n\nconst TaskState = (props) => {\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n\n  const [tasks, setTasks] = useState(tasksInitial);\n\n\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n\n\n  // // Add a Task\n  // const addTask = async (title, description, tag, duedate) => {\n  //   //TODO : API call\n  //   //API call\n  //   const response = await fetch(`${host}/api/tasks/addtask`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"auth-token\": localStorage.getItem(\"token\"),\n  //     },\n  //     body: JSON.stringify({ title, description, tag, duedate}),\n  //   });\n\n  //   const task = await response.json();\n  //   setTasks(tasks.concat(task));\n  // };\n  \n\n\n\n  // Delete a Task\n  const deleteTask = async (id) => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter((task) => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag, duedate, status}),\n    });\n\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break; \n      }\n    }\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{ tasks, addTask, deleteTask, editTask, getTasks}}\n    >\n      {props.children};\n    </TaskContext.Provider>\n  );\n};\n\nexport default TaskState;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}