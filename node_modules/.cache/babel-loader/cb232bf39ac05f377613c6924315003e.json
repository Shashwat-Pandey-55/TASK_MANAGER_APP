{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n  // Add a Task\n  const addTask = async (title, description, tag, duedate, users) => {\n    try {\n      const usersArray = Array.isArray(users) ? users : [users];\n      const response = await fetch(`${host}/api/tasks/addtask`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          tag,\n          duedate,\n          users\n        })\n      });\n      if (response.ok) {\n        const task = await response.json();\n        setTasks(prevTasks => [...prevTasks, task]);\n      } else {\n        // Handle the case where the response is not successful\n        console.log(\"Task not added. Error:\", response.status);\n      }\n    } catch (error) {\n      // Handle any network or other errors\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Delete a Task\n  const deleteTask = async id => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate,\n        status\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask,\n      editTask,\n      getTasks\n    },\n    children: [props.children, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskState, \"UhKdAoJZyQh7T+OrXFy8BVoRYQA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","tasks","setTasks","getTasks","response","fetch","method","headers","localStorage","getItem","json","addTask","title","description","tag","duedate","users","usersArray","Array","isArray","body","JSON","stringify","ok","task","prevTasks","console","log","status","error","deleteTask","id","newTasks","filter","_id","editTask","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\n\nconst TaskState = (props) => {\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n\n  const [tasks, setTasks] = useState(tasksInitial);\n\n\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n\n\n// Add a Task\nconst addTask = async (title, description, tag, duedate, users) => {\n  try {\n\n    const usersArray = Array.isArray(users) ? users : [users];\n \n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag, duedate, users}),\n    });\n\n    if (response.ok) {\n      const task = await response.json();\n      setTasks((prevTasks) => [...prevTasks, task]);\n    } else {\n      // Handle the case where the response is not successful\n      console.log(\"Task not added. Error:\", response.status);\n    }\n  } catch (error) {\n    // Handle any network or other errors\n    console.error(\"Error adding task:\", error);\n  }\n};\n\n\n\n\n\n  // Delete a Task\n  const deleteTask = async (id) => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const json = response.json();\n    console.log(json);\n    const newTasks = tasks.filter((task) => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate, status) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag, duedate, status}),\n    });\n\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        newTasks[index].status = status;\n        break; \n      }\n    }\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{ tasks, addTask, deleteTask, editTask, getTasks}}\n    >\n      {props.children};\n    </TaskContext.Provider>\n  );\n};\n\nexport default TaskState;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}