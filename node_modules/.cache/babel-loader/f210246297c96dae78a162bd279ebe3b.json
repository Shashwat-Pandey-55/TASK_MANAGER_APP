{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  // GET all Tasks\n  const getTasks = async () => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": local\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  };\n\n  // Add a Task\n  const addTask = async (title, description, tag, duedate) => {\n    //TODO : API call\n    //API call\n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": local\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate\n      })\n    });\n    const task = await response.json();\n    setTasks(tasks.concat(task));\n  };\n\n  // Delete a Task\n  const deleteTask = async id => {\n    // API call\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": local\n      }\n    });\n    const json = response.json();\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  // Edit a Task\n  const editTask = async (id, title, description, tag, duedate) => {\n    //API call\n    const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": local\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag,\n        duedate\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n\n    // Logic to edit in client\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element._id === id) {\n        newTasks[index].title = title;\n        newTasks[index].description = description;\n        newTasks[index].tag = tag;\n        newTasks[index].duedate = duedate;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask,\n      editTask,\n      getTasks\n    },\n    children: [props.children, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskState, \"UhKdAoJZyQh7T+OrXFy8BVoRYQA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","tasks","setTasks","getTasks","response","fetch","method","headers","local","json","addTask","title","description","tag","duedate","body","JSON","stringify","task","concat","deleteTask","id","newTasks","filter","_id","editTask","console","log","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// eslint-disable-next-line\nimport { useState } from \"react\";\nimport TaskContext from \"./taskContext\";\n\nconst TaskState = (props) => {\n    const host = \"http://localhost:5500\";\n    const tasksInitial = []\n    \n    const [tasks, setTasks]  = useState(tasksInitial)\n\n\n // GET all Tasks\n const getTasks = async () => {\n      //API call\n      const response = await fetch (`${host}/api/tasks/fetchalltasks`, {\n        method : 'GET',\n        headers : {\n            'Content-Type' : 'application/json',\n            \"auth-token\" : local\n        },\n    });\n  const json = await response.json();\n  setTasks(json);\n}\n\n\n\n\n    // Add a Task\n    const addTask = async (title, description,tag, duedate) => {\n        //TODO : API call\n          //API call\n          const response = await fetch (`${host}/api/tasks/addtask`, {\n            method : 'POST',\n            headers : {\n                'Content-Type' : 'application/json',\n                \"auth-token\" : local\n            },\n            body: JSON.stringify({ title, description, tag, duedate})\n        });\n\n        const task = await response.json();\n        setTasks(tasks.concat(task));\n\n    }\n\n\n\n\n    // Delete a Task\n    const deleteTask =  async (id) => {\n        // API call\n        const response = await fetch (`${host}/api/tasks/deletetask/${id}`, {\n            method : 'DELETE',\n            headers : {\n                'Content-Type' : 'application/json',\n                \"auth-token\" : local\n            },\n        });\n\n        const json =   response.json();\n        const newTasks = tasks.filter((task)=>{return task._id!==id})\n        setTasks(newTasks);\n    }\n\n\n\n    // Edit a Task\n    const editTask = async (id, title, description, tag, duedate) => {\n        //API call\n        const response = await fetch (`${host}/api/tasks/updatetask/${id}`, {\n            method : 'PUT',\n            headers : {\n                'Content-Type' : 'application/json',\n                \"auth-token\" : local\n            },\n            body: JSON.stringify({title, description, tag, duedate})\n        });\n\n        const json = await response.json();\n        console.log(json);\n         let newTasks = JSON.parse(JSON.stringify(tasks));\n\n        // Logic to edit in client\n        for (let index = 0; index < newTasks.length; index++) {\n            const element = newTasks[index];\n            if (element._id === id)\n            {\n                newTasks[index].title = title;\n                newTasks[index].description = description;\n                newTasks[index].tag = tag;\n                newTasks[index].duedate = duedate;\n                break;\n            }\n            \n        }\n        setTasks(newTasks);\n    }\n\n    return (\n        <TaskContext.Provider value = {{tasks, addTask, deleteTask, editTask, getTasks}}>\n            {props.children};\n        </TaskContext.Provider>\n    )\n}\n\nexport default TaskState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}