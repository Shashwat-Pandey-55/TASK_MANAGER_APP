{"ast":null,"code":"// // eslint-disable-next-line\n// import { useState } from \"react\";\n// import TaskContext from \"./taskContext\";\n\n// const TaskState = (props) => {\n//   const host = \"http://localhost:5500\";\n//   const tasksInitial = [];\n\n//   const [tasks, setTasks] = useState(tasksInitial);\n\n//   // GET all Tasks\n//   const getTasks = async () => {\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//     });\n//     const json = await response.json();\n//     setTasks(json);\n//   };\n\n//   // Add a Task\n//   const addTask = async (title, description, tag, duedate) => {\n//     //TODO : API call\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/addtask`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//       body: JSON.stringify({ title, description, tag, duedate}),\n//     });\n\n//     const task = await response.json();\n//     setTasks(tasks.concat(task));\n//   };\n\n//   // Delete a Task\n//   const deleteTask = async (id) => {\n//     // API call\n//     const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//     });\n\n//     const json = response.json();\n//     console.log(json);\n//     const newTasks = tasks.filter((task) => {\n//       return task._id !== id;\n//     });\n//     setTasks(newTasks);\n//   };\n\n//   // Edit a Task\n//   const editTask = async (id, title, description, tag, duedate) => {\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//       body: JSON.stringify({ title, description, tag, duedate}),\n//     });\n\n//     const json = await response.json();\n//     console.log(json);\n//     let newTasks = JSON.parse(JSON.stringify(tasks));\n\n//     // Logic to edit in client\n//     for (let index = 0; index < newTasks.length; index++) {\n//       const element = newTasks[index];\n//       if (element._id === id) {\n//         newTasks[index].title = title;\n//         newTasks[index].description = description;\n//         newTasks[index].tag = tag;\n//         newTasks[index].duedate = duedate;\n//         // newTasks[index].status = status;\n//         break;\n//       }\n//     }\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <TaskContext.Provider\n//       value={{ tasks, addTask, deleteTask, editTask, getTasks}}\n//     >\n//       {props.children};\n//     </TaskContext.Provider>\n//   );\n// };\n\n// export default TaskState;","map":{"version":3,"names":[],"sources":["/Users/shashwatpandey/Downloads/app/taskmanager/src/context/tasks/TaskState.js"],"sourcesContent":["// // eslint-disable-next-line\n// import { useState } from \"react\";\n// import TaskContext from \"./taskContext\";\n\n// const TaskState = (props) => {\n//   const host = \"http://localhost:5500\";\n//   const tasksInitial = [];\n\n//   const [tasks, setTasks] = useState(tasksInitial);\n\n\n\n//   // GET all Tasks\n//   const getTasks = async () => {\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/fetchalltasks`, {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//     });\n//     const json = await response.json();\n//     setTasks(json);\n//   };\n\n\n\n//   // Add a Task\n//   const addTask = async (title, description, tag, duedate) => {\n//     //TODO : API call\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/addtask`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//       body: JSON.stringify({ title, description, tag, duedate}),\n//     });\n\n//     const task = await response.json();\n//     setTasks(tasks.concat(task));\n//   };\n\n\n\n//   // Delete a Task\n//   const deleteTask = async (id) => {\n//     // API call\n//     const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//     });\n\n//     const json = response.json();\n//     console.log(json);\n//     const newTasks = tasks.filter((task) => {\n//       return task._id !== id;\n//     });\n//     setTasks(newTasks);\n//   };\n\n\n\n//   // Edit a Task\n//   const editTask = async (id, title, description, tag, duedate) => {\n//     //API call\n//     const response = await fetch(`${host}/api/tasks/updatetask/${id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"token\"),\n//       },\n//       body: JSON.stringify({ title, description, tag, duedate}),\n//     });\n\n//     const json = await response.json();\n//     console.log(json);\n//     let newTasks = JSON.parse(JSON.stringify(tasks));\n\n//     // Logic to edit in client\n//     for (let index = 0; index < newTasks.length; index++) {\n//       const element = newTasks[index];\n//       if (element._id === id) {\n//         newTasks[index].title = title;\n//         newTasks[index].description = description;\n//         newTasks[index].tag = tag;\n//         newTasks[index].duedate = duedate;\n//         // newTasks[index].status = status;\n//         break;\n//       }\n//     }\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <TaskContext.Provider\n//       value={{ tasks, addTask, deleteTask, editTask, getTasks}}\n//     >\n//       {props.children};\n//     </TaskContext.Provider>\n//   );\n// };\n\n// export default TaskState;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}